public static List<int> dynamicArray(int n, List<List<int>> queries)
    {
        List<List<int>> arr = new List<List<int>>();//Establish new array here
        for (int i = 0; i < n; i++) //Iterate over 
            arr.Add(new List<int>());//Add to the array
            
        List<int> result = new List<int>();//Store the result of each type 2 query here
        int lastAnswer = 0; //Declare an integer, lastAnswer, and initialize it to 0.

        for (int i = 0; i < queries.Count; i++) //Iterate over the queries
        {
            int x = queries[i][1]; //Initialize x here
            int y = queries[i][2]; //Initialize y here
            int index = ((x ^ lastAnswer) % n);//Remainder of x(XOR) value divided by the integer n. True if and only if arguments differ
            if (queries[i][0] == 1) //If query is equal to 1
            {
                arr[index].Add(y); //Add y to array
            }
            else if (queries[i][0] == 2) //If query is equal to 2
            {
                lastAnswer = arr[index][y % arr[index].Count]; //Store new value of lastAnswer here
                result.Add(lastAnswer); //Add lastAnswer to the result
            }
        }
        return result; //Return the result
    }