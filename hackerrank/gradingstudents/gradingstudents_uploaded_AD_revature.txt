using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'gradingStudents' function below.
     *
     * The function is expected to return an INTEGER_ARRAY.
     * The function accepts INTEGER_ARRAY grades as parameter.
     */

    public static List<int> gradingStudents(List<int> grades)
    {   
        for (int i = 0; i < grades.Count; i++) // Iterate over list of grades
        {
            if (grades[i] >= 38) //If the grades are greater than or equal to 38
            {
                int roundGrade = grades[i]; //This will eventually equal a grade that is a multiple of 5 when certain conditions are met
                while (roundGrade % 5 != 0) //While the grade is not a multiple of 5
                {
                    roundGrade++; //Continue to loop until a grade that is a multiple of 5 is reached
                }
                if (roundGrade - grades[i] < 3) //If the grade (grades[i]) that is not a multiple of 5 is less than 3 grade points away from a multiple of 5 (roundGrade)
                {
                    grades[i] = roundGrade; //Update the grade (grades[i]) to the rounded grade that is a multiple of 5
                }
            }
        }
        return grades; //return updated grades and all grades that did not meet conditions to get rounded
    }

}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int gradesCount = Convert.ToInt32(Console.ReadLine().Trim());

        List<int> grades = new List<int>();

        for (int i = 0; i < gradesCount; i++)
        {
            int gradesItem = Convert.ToInt32(Console.ReadLine().Trim());
            grades.Add(gradesItem);
        }

        List<int> result = Result.gradingStudents(grades);

        textWriter.WriteLine(String.Join("\n", result));

        textWriter.Flush();
        textWriter.Close();
    }
}